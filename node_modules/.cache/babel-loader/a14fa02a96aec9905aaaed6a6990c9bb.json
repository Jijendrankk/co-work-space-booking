{"ast":null,"code":"var _jsxFileName = \"/Users/jijendrankk/hs/hs-frontend/src/modules/mainLeadDashboard/Login/index.js\";\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport hsImg from \"../../../assets/logo-icon.svg\";\nimport StaticData from \"./StaticData\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport \"./index.scss\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showPassword: false,\n      loginPassword: \"\",\n      isForgotPwd: false,\n      isSignUpStatus: false\n    };\n\n    this.handleClickShowPassword = () => {\n      this.setState(prevState => ({\n        showPassword: !prevState.showPassword\n      }));\n    };\n\n    this.callLogin = () => {\n      this.setState({\n        isSignUpStatus: false\n      });\n    };\n\n    this.callForgotPwd = () => {\n      this.setState(prevState => ({\n        isForgotPwd: !prevState.isForgotPwd\n      }));\n    };\n\n    this.changeLoginOrSignupStatus = () => {\n      this.setState(prevState => ({\n        isSignUpStatus: !prevState.isSignUpStatus,\n        isForgotPwd: false\n      }));\n    };\n  }\n\n  renderLoginBlock() {\n    return React.createElement(\"div\", {\n      className: \"login-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: hsImg,\n      className: \"hs-img-icon isDisable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"login-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Login to \", React.createElement(\"span\", {\n      className: \"space-os-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Space OS\")), React.createElement(TextField, {\n      id: \"standard-basic\",\n      className: \"user-name-text-field\",\n      label: \"Official Email ID\",\n      placeholder: \"EX: name@thehackerstreet.com\",\n      margin: \"normal\",\n      autoComplete: \"off\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: this.state.showPassword ? \"text\" : \"password\",\n      label: \"Password\",\n      placeholder: \"enter your password\",\n      className: \"password-text-field\",\n      autoComplete: \"off\",\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })))\n      },\n      required: true,\n      onChange: event => this.setState({\n        loginPassword: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"login-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"forgot-password-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"forgot-password-label\",\n      onClick: this.callForgotPwd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Forgot Password?\")));\n  }\n\n  renderSignUp() {\n    return React.createElement(\"div\", {\n      className: \"signup-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: hsImg,\n      className: \"hs-img-icon isDisable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"signup-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Signup to \", React.createElement(\"span\", {\n      className: \"space-os-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Space OS\")), React.createElement(TextField, {\n      className: \"user-name-text-field\",\n      label: \"Your Name\",\n      placeholder: \"enter your fullname\",\n      autoComplete: \"off\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: \"password-text-field\",\n      label: \"Organization Name\",\n      placeholder: \"enter your organization\",\n      autoComplete: \"off\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: \"password-text-field\",\n      label: \"User Name\",\n      autoComplete: \"off\",\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \" \", \".hackerstreet.space\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: \"password-text-field\",\n      label: \"Official Email ID\",\n      placeholder: \"EX: name@thehackerstreet.com\",\n      autoComplete: \"off\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      type: this.state.showPassword ? \"text\" : \"password\",\n      label: \"Password\",\n      placeholder: \"enter your password\",\n      className: \"password-text-field\",\n      autoComplete: \"off\",\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        })))\n      },\n      required: true,\n      onChange: event => this.setState({\n        loginPassword: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      className: \"password-text-field\",\n      label: \"Phone Number\",\n      placeholder: \"EX: +91XXXXXXXXXX\",\n      autoComplete: \"off\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"terms-and-check-box-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: state.checkedB,\n      onChange: handleChange(\"checkedB\"),\n      value: \"checkedB\",\n      color: \"primary\",\n      inputProps: {\n        \"aria-label\": \"secondary checkbox\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"signup-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Request Access\"), React.createElement(\"div\", {\n      className: \"forgot-password-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Already an User?\", React.createElement(\"span\", {\n      className: \"forgot-password-label\",\n      onClick: this.callLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \" \", \"Login here.\")));\n  }\n\n  renderForgotPwd() {\n    return React.createElement(\"div\", {\n      className: \"forgot-password-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"forgot-password-word\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Forgot Password\"), React.createElement(TextField, {\n      className: \"email-text-field\",\n      label: \"Official Email ID\",\n      placeholder: \"EX: name@thehackerstreet.com\",\n      autoComplete: \"off\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"send-mail-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"Send Mail\"), React.createElement(\"div\", {\n      className: \"back-to-login-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"back-to-login\",\n      onClick: this.callForgotPwd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"Back to Login?\")));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(StaticData, {\n      loginOrSignup: this.state.isSignUpStatus,\n      handleLoginOrSignup: this.changeLoginOrSignupStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), this.state.isSignUpStatus ? React.createElement(\"div\", {\n      className: \"signup-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.renderSignUp()) : React.createElement(\"div\", {\n      className: \"login-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.state.isForgotPwd ? this.renderForgotPwd() : this.renderLoginBlock()));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/jijendrankk/hs/hs-frontend/src/modules/mainLeadDashboard/Login/index.js"],"names":["React","Component","TextField","Visibility","VisibilityOff","InputAdornment","IconButton","Button","StaticData","Checkbox","Login","state","showPassword","loginPassword","isForgotPwd","isSignUpStatus","handleClickShowPassword","setState","prevState","callLogin","callForgotPwd","changeLoginOrSignupStatus","renderLoginBlock","hsImg","endAdornment","event","target","value","renderSignUp","checkedB","handleChange","renderForgotPwd","render"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAO,cAAP;;AAEA,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BU,KAD4B,GACpB;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,aAAa,EAAE,EAFT;AAGNC,MAAAA,WAAW,EAAE,KAHP;AAINC,MAAAA,cAAc,EAAE;AAJV,KADoB;;AAAA,SAO5BC,uBAP4B,GAOF,MAAM;AAC9B,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BN,QAAAA,YAAY,EAAE,CAACM,SAAS,CAACN;AADC,OAAL,CAAvB;AAGD,KAX2B;;AAAA,SAY5BO,SAZ4B,GAYhB,MAAM;AAChB,WAAKF,QAAL,CAAc;AACZF,QAAAA,cAAc,EAAE;AADJ,OAAd;AAGD,KAhB2B;;AAAA,SAiB5BK,aAjB4B,GAiBZ,MAAM;AACpB,WAAKH,QAAL,CAAcC,SAAS,KAAK;AAC1BJ,QAAAA,WAAW,EAAE,CAACI,SAAS,CAACJ;AADE,OAAL,CAAvB;AAGD,KArB2B;;AAAA,SAyL5BO,yBAzL4B,GAyLA,MAAM;AAChC,WAAKJ,QAAL,CAAcC,SAAS,KAAK;AAC1BH,QAAAA,cAAc,EAAE,CAACG,SAAS,CAACH,cADD;AAE1BD,QAAAA,WAAW,EAAE;AAFa,OAAL,CAAvB;AAID,KA9L2B;AAAA;;AAsB5BQ,EAAAA,gBAAgB,GAAG;AACjB,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEC,KAAV;AAAiB,MAAA,SAAS,EAAC,uBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACW;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADX,CAFF,EAKE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,KAAK,EAAC,mBAHR;AAIE,MAAA,WAAW,EAAC,8BAJd;AAKE,MAAA,MAAM,EAAC,QALT;AAME,MAAA,YAAY,EAAC,KANf;AAOE,MAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAcE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWC,YAAX,GAA0B,MAA1B,GAAmC,UAD3C;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,WAAW,EAAC,qBAHd;AAIE,MAAA,SAAS,EAAC,qBAJZ;AAKE,MAAA,YAAY,EAAC,KALf;AAME,MAAA,UAAU,EAAE;AACVY,QAAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,wBAAW,4BAFb;AAGE,UAAA,OAAO,EAAE,KAAKR,uBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG,KAAKL,KAAL,CAAWC,YAAX,GAA0B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1B,GAA8C,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALjD,CADF;AAFQ,OANd;AAmBE,MAAA,QAAQ,MAnBV;AAoBE,MAAA,QAAQ,EAAEa,KAAK,IACb,KAAKR,QAAL,CAAc;AAAEJ,QAAAA,aAAa,EAAEY,KAAK,CAACC,MAAN,CAAaC;AAA9B,OAAd,CArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAsCE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAtCF,EAuCE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAwC,MAAA,OAAO,EAAE,KAAKP,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAvCF,CADF;AA+CD;;AACDQ,EAAAA,YAAY,GAAG;AACb,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEL,KAAV;AAAiB,MAAA,SAAS,EAAC,uBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACY;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADZ,CAFF,EAKE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,sBADZ;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,WAAW,EAAC,qBAHd;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAYE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,KAAK,EAAC,mBAFR;AAGE,MAAA,WAAW,EAAC,yBAHd;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAmBE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,YAAY,EAAC,KAHf;AAIE,MAAA,UAAU,EAAE;AACVC,QAAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,GADH;AAFQ,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAgCE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,KAAK,EAAC,mBAFR;AAGE,MAAA,WAAW,EAAC,8BAHd;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF,EAuCE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWC,YAAX,GAA0B,MAA1B,GAAmC,UAD3C;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,WAAW,EAAC,qBAHd;AAIE,MAAA,SAAS,EAAC,qBAJZ;AAKE,MAAA,YAAY,EAAC,KALf;AAME,MAAA,UAAU,EAAE;AACVY,QAAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AACE,UAAA,IAAI,EAAC,KADP;AAEE,wBAAW,4BAFb;AAGE,UAAA,OAAO,EAAE,KAAKR,uBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKG,KAAKL,KAAL,CAAWC,YAAX,GAA0B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA1B,GAA8C,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALjD,CADF;AAFQ,OANd;AAmBE,MAAA,QAAQ,MAnBV;AAoBE,MAAA,QAAQ,EAAEa,KAAK,IACb,KAAKR,QAAL,CAAc;AAAEJ,QAAAA,aAAa,EAAEY,KAAK,CAACC,MAAN,CAAaC;AAA9B,OAAd,CArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCF,EA+DE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,WAAW,EAAC,mBAHd;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/DF,EAsEE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,OAAO,EAAEhB,KAAK,CAACkB,QADjB;AAEE,MAAA,QAAQ,EAAEC,YAAY,CAAC,UAAD,CAFxB;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,UAAU,EAAE;AACV,sBAAc;AADJ,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtEF,EAiFE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAjFF,EAkFE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAEE;AAAM,MAAA,SAAS,EAAC,uBAAhB;AAAwC,MAAA,OAAO,EAAE,KAAKX,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,gBAFF,CAlFF,CADF;AA4FD;;AACDY,EAAAA,eAAe,GAAG;AAChB,WACE;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,KAAK,EAAC,mBAFR;AAGE,MAAA,WAAW,EAAC,8BAHd;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,EAUE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAgC,MAAA,OAAO,EAAE,KAAKX,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAVF,CADF;AAkBD;;AAODY,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,aAAa,EAAE,KAAKrB,KAAL,CAAWI,cAD5B;AAEE,MAAA,mBAAmB,EAAE,KAAKM,yBAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKG,KAAKV,KAAL,CAAWI,cAAX,GACC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKa,YAAL,EAAjC,CADD,GAGC;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKjB,KAAL,CAAWG,WAAX,GACG,KAAKiB,eAAL,EADH,GAEG,KAAKT,gBAAL,EAHN,CARJ,CADF;AAiBD;;AAjN2B;;AAoN9B,eAAeZ,KAAf","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\nimport React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport hsImg from \"../../../assets/logo-icon.svg\";\nimport StaticData from \"./StaticData\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport \"./index.scss\";\n\nclass Login extends Component {\n  state = {\n    showPassword: false,\n    loginPassword: \"\",\n    isForgotPwd: false,\n    isSignUpStatus: false\n  };\n  handleClickShowPassword = () => {\n    this.setState(prevState => ({\n      showPassword: !prevState.showPassword\n    }));\n  };\n  callLogin = () => {\n    this.setState({\n      isSignUpStatus: false\n    });\n  };\n  callForgotPwd = () => {\n    this.setState(prevState => ({\n      isForgotPwd: !prevState.isForgotPwd\n    }));\n  };\n  renderLoginBlock() {\n    return (\n      <div className=\"login-block\">\n        <img src={hsImg} className=\"hs-img-icon isDisable\" />\n        <div className=\"login-label\">\n          Login to <span className=\"space-os-label\">Space OS</span>\n        </div>\n        <TextField\n          id=\"standard-basic\"\n          className=\"user-name-text-field\"\n          label=\"Official Email ID\"\n          placeholder=\"EX: name@thehackerstreet.com\"\n          margin=\"normal\"\n          autoComplete=\"off\"\n          required\n        />\n        <TextField\n          type={this.state.showPassword ? \"text\" : \"password\"}\n          label=\"Password\"\n          placeholder=\"enter your password\"\n          className=\"password-text-field\"\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            )\n          }}\n          required\n          onChange={event =>\n            this.setState({ loginPassword: event.target.value })\n          }\n        />\n        <Button className=\"login-btn\">Login</Button>\n        <div className=\"forgot-password-block\">\n          <span className=\"forgot-password-label\" onClick={this.callForgotPwd}>\n            Forgot Password?\n          </span>\n        </div>\n      </div>\n    );\n  }\n  renderSignUp() {\n    return (\n      <div className=\"signup-block\">\n        <img src={hsImg} className=\"hs-img-icon isDisable\" />\n        <div className=\"signup-label\">\n          Signup to <span className=\"space-os-label\">Space OS</span>\n        </div>\n        <TextField\n          className=\"user-name-text-field\"\n          label=\"Your Name\"\n          placeholder=\"enter your fullname\"\n          autoComplete=\"off\"\n          required\n        />\n        <TextField\n          className=\"password-text-field\"\n          label=\"Organization Name\"\n          placeholder=\"enter your organization\"\n          autoComplete=\"off\"\n          required\n        />\n        <TextField\n          className=\"password-text-field\"\n          label=\"User Name\"\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                {\" \"}\n                .hackerstreet.space\n              </InputAdornment>\n            )\n          }}\n        />\n        <TextField\n          className=\"password-text-field\"\n          label=\"Official Email ID\"\n          placeholder=\"EX: name@thehackerstreet.com\"\n          autoComplete=\"off\"\n          required\n        />\n        <TextField\n          type={this.state.showPassword ? \"text\" : \"password\"}\n          label=\"Password\"\n          placeholder=\"enter your password\"\n          className=\"password-text-field\"\n          autoComplete=\"off\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  edge=\"end\"\n                  aria-label=\"toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            )\n          }}\n          required\n          onChange={event =>\n            this.setState({ loginPassword: event.target.value })\n          }\n        />\n        <TextField\n          className=\"password-text-field\"\n          label=\"Phone Number\"\n          placeholder=\"EX: +91XXXXXXXXXX\"\n          autoComplete=\"off\"\n          required\n        />\n        <div className=\"terms-and-check-box-block\">\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange(\"checkedB\")}\n            value=\"checkedB\"\n            color=\"primary\"\n            inputProps={{\n              \"aria-label\": \"secondary checkbox\"\n            }}\n          />\n        </div>\n        <Button className=\"signup-btn\">Request Access</Button>\n        <div className=\"forgot-password-block\">\n          Already an User?\n          <span className=\"forgot-password-label\" onClick={this.callLogin}>\n            {\" \"}\n            Login here.\n          </span>\n        </div>\n      </div>\n    );\n  }\n  renderForgotPwd() {\n    return (\n      <div className=\"forgot-password-container\">\n        <span className=\"forgot-password-word\">Forgot Password</span>\n        <TextField\n          className=\"email-text-field\"\n          label=\"Official Email ID\"\n          placeholder=\"EX: name@thehackerstreet.com\"\n          autoComplete=\"off\"\n          required\n        />\n        <Button className=\"send-mail-btn\">Send Mail</Button>\n        <div className=\"back-to-login-block\">\n          <span className=\"back-to-login\" onClick={this.callForgotPwd}>\n            Back to Login?\n          </span>\n        </div>\n      </div>\n    );\n  }\n  changeLoginOrSignupStatus = () => {\n    this.setState(prevState => ({\n      isSignUpStatus: !prevState.isSignUpStatus,\n      isForgotPwd: false\n    }));\n  };\n  render() {\n    return (\n      <div className=\"login-container\">\n        <StaticData\n          loginOrSignup={this.state.isSignUpStatus}\n          handleLoginOrSignup={this.changeLoginOrSignupStatus}\n        />\n        {this.state.isSignUpStatus ? (\n          <div className=\"signup-section\">{this.renderSignUp()}</div>\n        ) : (\n          <div className=\"login-section\">\n            {this.state.isForgotPwd\n              ? this.renderForgotPwd()\n              : this.renderLoginBlock()}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}